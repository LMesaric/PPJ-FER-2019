KR_STRUCT 1 struct
IDN 1 S
L_VIT_ZAGRADA 1 {
KR_CHAR 2 char
IDN 2 t
TOCKAZAREZ 2 ;
KR_INT 3 int
IDN 3 x
TOCKAZAREZ 3 ;
D_VIT_ZAGRADA 4 }
TOCKAZAREZ 4 ;
KR_VOID 9 void
IDN 9 fun
L_ZAGRADA 9 (
KR_INT 9 int
IDN 9 xYz
D_ZAGRADA 9 )
L_VIT_ZAGRADA 9 {
KR_RETURN 10 return
TOCKAZAREZ 10 ;
D_VIT_ZAGRADA 11 }
KR_INT 14 int
IDN 14 main
L_ZAGRADA 14 (
KR_VOID 14 void
D_ZAGRADA 14 )
L_VIT_ZAGRADA 14 {
KR_INT 15 int
IDN 15 A
L_UGL_ZAGRADA 15 [
BROJ 15 512
D_UGL_ZAGRADA 15 ]
TOCKAZAREZ 15 ;
KR_INT 16 int
IDN 16 t
L_UGL_ZAGRADA 16 [
D_UGL_ZAGRADA 16 ]
OP_PRIDRUZI 16 =
L_VIT_ZAGRADA 16 {
BROJ 16 1
ZAREZ 16 ,
BROJ 16 2
ZAREZ 16 ,
BROJ 16 3
D_VIT_ZAGRADA 16 }
TOCKAZAREZ 16 ;
KR_CHAR 17 char
IDN 17 tmp
L_UGL_ZAGRADA 17 [
D_UGL_ZAGRADA 17 ]
OP_PRIDRUZI 17 =
NIZ_ZNAKOVA 17 "te\nst"
TOCKAZAREZ 17 ;
KR_CONST 18 const
KR_CHAR 18 char
ASTERISK 18 *
IDN 18 x
OP_PRIDRUZI 18 =
NIZ_ZNAKOVA 18 "\"tes\"t2\""
TOCKAZAREZ 18 ;
KR_INT 19 int
IDN 19 xYz
ZAREZ 19 ,
ASTERISK 19 *
IDN 19 abc
TOCKAZAREZ 19 ;
KR_FLOAT 20 float
IDN 20 a_B1
OP_PRIDRUZI 20 =
BROJ 20 10.23
PLUS 20 +
BROJ 20 .12
PLUS 20 +
BROJ 20 1.43e-3
PLUS 20 +
BROJ 20 .43E3
PLUS 20 +
BROJ 20 .46E+134
PLUS 20 +
BROJ 20 0.47E-123
TOCKAZAREZ 20 ;
KR_INT 21 int
IDN 21 i
TOCKAZAREZ 21 ;
KR_STRUCT 22 struct
IDN 22 S
IDN 22 strct
TOCKAZAREZ 22 ;
IDN 23 strct
TOCKA 23 .
IDN 23 t
OP_PRIDRUZI 23 =
ZNAK 23 'b'
TOCKAZAREZ 23 ;
IDN 24 strct
TOCKA 24 .
IDN 24 x
OP_PRIDRUZI 24 =
BROJ 24 4321
TOCKAZAREZ 24 ;
IDN 26 xYz
OP_PRIDRUZI 26 =
BROJ 26 12345
TOCKAZAREZ 26 ;
IDN 27 abc
OP_PRIDRUZI 27 =
AMPERSAND 27 &
IDN 27 xYz
TOCKAZAREZ 27 ;
IDN 28 abc
OP_PRIDRUZI 28 =
L_ZAGRADA 28 (
AMPERSAND 28 &
IDN 28 xYz
D_ZAGRADA 28 )
TOCKAZAREZ 28 ;
ASTERISK 29 *
IDN 29 abc
OP_PRIDRUZI 29 =
ASTERISK 29 *
IDN 29 abc
OP_INC 29 ++
PLUS 29 +
IDN 29 xYz
TOCKAZAREZ 29 ;
ASTERISK 30 *
IDN 30 abc
OP_PRIDRUZI 30 =
BROJ 30 054
OP_MOD 30 %
BROJ 30 5
TOCKAZAREZ 30 ;
ASTERISK 31 *
IDN 31 abc
OP_PRIDRUZI 31 =
BROJ 31 0xaafff
TOCKAZAREZ 31 ;
IDN 32 i
OP_PRIDRUZI 32 =
BROJ 32 3
ASTERISK 32 *
BROJ 32 2
PLUS 32 +
BROJ 32 5
MINUS 32 -
BROJ 32 3
OP_BIN_ILI 32 |
BROJ 32 3
AMPERSAND 32 &
BROJ 32 3
OP_BIN_XILI 32 ^
BROJ 32 3
TOCKAZAREZ 32 ;
IDN 33 i
OP_PRIDRUZI 33 =
OP_NEG 33 !
BROJ 33 5
TOCKAZAREZ 33 ;
IDN 34 i
OP_PRIDRUZI 34 =
OP_TILDA 34 ~
BROJ 34 2
TOCKAZAREZ 34 ;
IDN 36 tmp
L_UGL_ZAGRADA 36 [
BROJ 36 1
D_UGL_ZAGRADA 36 ]
OP_PRIDRUZI 36 =
ZNAK 36 'b'
TOCKAZAREZ 36 ;
IDN 37 tmp
L_UGL_ZAGRADA 37 [
BROJ 37 2
D_UGL_ZAGRADA 37 ]
OP_PRIDRUZI 37 =
ZNAK 37 '\n'
TOCKAZAREZ 37 ;
IDN 38 tmp
L_UGL_ZAGRADA 38 [
BROJ 38 3
D_UGL_ZAGRADA 38 ]
OP_PRIDRUZI 38 =
ZNAK 38 '\''
TOCKAZAREZ 38 ;
IDN 39 tmp
L_UGL_ZAGRADA 39 [
BROJ 39 0
D_UGL_ZAGRADA 39 ]
OP_PRIDRUZI 39 =
ZNAK 39 '\''
TOCKAZAREZ 39 ;
KR_FOR 40 for
L_ZAGRADA 40 (
IDN 40 i
OP_PRIDRUZI 40 =
BROJ 40 0
TOCKAZAREZ 40 ;
IDN 40 i
OP_LT 40 <
BROJ 40 4
TOCKAZAREZ 40 ;
OP_INC 40 ++
IDN 40 i
D_ZAGRADA 40 )
L_VIT_ZAGRADA 40 {
IDN 41 tmp
L_UGL_ZAGRADA 41 [
IDN 41 i
D_UGL_ZAGRADA 41 ]
OP_PRIDRUZI 41 =
L_ZAGRADA 41 (
KR_CHAR 41 char
D_ZAGRADA 41 )
ASTERISK 41 *
IDN 41 abc
TOCKAZAREZ 41 ;
KR_BREAK 44 break
TOCKAZAREZ 44 ;
KR_CONTINUE 45 continue
TOCKAZAREZ 45 ;
KR_RETURN 46 return
ASTERISK 46 *
AMPERSAND 46 &
IDN 46 xYz
TOCKAZAREZ 46 ;
D_VIT_ZAGRADA 47 }
KR_IF 49 if
L_ZAGRADA 49 (
BROJ 49 1
OP_GTE 49 >=
BROJ 49 3
OP_I 49 &&
IDN 49 i
OP_GT 49 >
BROJ 49 2
OP_ILI 49 ||
IDN 49 i
OP_LTE 49 <=
BROJ 49 12
D_ZAGRADA 49 )
L_VIT_ZAGRADA 49 {
IDN 50 fun
L_ZAGRADA 50 (
BROJ 50 3
D_ZAGRADA 50 )
TOCKAZAREZ 50 ;
D_VIT_ZAGRADA 51 }
KR_ELSE 51 else
L_VIT_ZAGRADA 51 {
IDN 52 fun
L_ZAGRADA 52 (
BROJ 52 5
D_ZAGRADA 52 )
TOCKAZAREZ 52 ;
D_VIT_ZAGRADA 53 }
KR_WHILE 55 while
L_ZAGRADA 55 (
BROJ 55 1
D_ZAGRADA 55 )
L_VIT_ZAGRADA 55 {
KR_BREAK 56 break
TOCKAZAREZ 56 ;
D_VIT_ZAGRADA 57 }
KR_RETURN 59 return
BROJ 59 0
TOCKAZAREZ 59 ;
D_VIT_ZAGRADA 60 }
