KR_INT 1 int
IDN 1 f
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 a
L_UGL_ZAGRADA 1 [
D_UGL_ZAGRADA 1 ]
D_ZAGRADA 1 )
L_VIT_ZAGRADA 1 {
KR_RETURN 2 return
IDN 2 a
L_UGL_ZAGRADA 2 [
BROJ 2 0
D_UGL_ZAGRADA 2 ]
TOCKAZAREZ 2 ;
D_VIT_ZAGRADA 3 }
KR_INT 5 int
IDN 5 main
L_ZAGRADA 5 (
KR_VOID 5 void
D_ZAGRADA 5 )
L_VIT_ZAGRADA 5 {
KR_INT 6 int
IDN 6 i
OP_PRIDRUZI 6 =
BROJ 6 0
TOCKAZAREZ 6 ;
KR_INT 7 int
IDN 7 n
OP_PRIDRUZI 7 =
BROJ 7 2
TOCKAZAREZ 7 ;
KR_INT 8 int
IDN 8 a
L_UGL_ZAGRADA 8 [
BROJ 8 2
D_UGL_ZAGRADA 8 ]
TOCKAZAREZ 8 ;
KR_WHILE 9 while
L_ZAGRADA 9 (
IDN 9 i
OP_LT 9 <
IDN 9 n
OP_I 9 &&
L_ZAGRADA 9 (
IDN 9 a
L_UGL_ZAGRADA 9 [
IDN 9 i
D_UGL_ZAGRADA 9 ]
OP_PRIDRUZI 9 =
BROJ 9 2
D_ZAGRADA 9 )
D_ZAGRADA 9 )
L_VIT_ZAGRADA 9 {
IDN 10 i
OP_INC 10 ++
TOCKAZAREZ 10 ;
D_VIT_ZAGRADA 11 }
IDN 12 f
L_ZAGRADA 12 (
IDN 12 a
D_ZAGRADA 12 )
TOCKAZAREZ 12 ;
KR_RETURN 13 return
BROJ 13 0
TOCKAZAREZ 13 ;
D_VIT_ZAGRADA 14 }
