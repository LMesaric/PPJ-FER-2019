KR_INT 1 int
IDN 1 i
TOCKAZAREZ 1 ;
KR_VOID 2 void
IDN 2 main
L_ZAGRADA 2 (
KR_VOID 2 void
D_ZAGRADA 2 )
L_VIT_ZAGRADA 2 {
KR_IF 3 if
L_ZAGRADA 3 (
BROJ 3 1
D_ZAGRADA 3 )
L_VIT_ZAGRADA 3 {
KR_INT 4 int
IDN 4 i
TOCKAZAREZ 4 ;
KR_FOR 5 for
L_ZAGRADA 5 (
IDN 5 i
OP_PRIDRUZI 5 =
BROJ 5 0
TOCKAZAREZ 5 ;
IDN 5 i
OP_LT 5 <
BROJ 5 2
TOCKAZAREZ 5 ;
IDN 5 i
OP_INC 5 ++
D_ZAGRADA 5 )
L_VIT_ZAGRADA 5 {
IDN 6 i
OP_PRIDRUZI 6 =
BROJ 6 3
TOCKAZAREZ 6 ;
L_VIT_ZAGRADA 7 {
KR_INT 8 int
IDN 8 i
OP_PRIDRUZI 8 =
BROJ 8 4
TOCKAZAREZ 8 ;
L_VIT_ZAGRADA 9 {
L_VIT_ZAGRADA 9 {
L_VIT_ZAGRADA 9 {
L_VIT_ZAGRADA 9 {
KR_INT 10 int
IDN 10 i
OP_PRIDRUZI 10 =
BROJ 10 3
TOCKAZAREZ 10 ;
L_VIT_ZAGRADA 11 {
IDN 12 i
OP_INC 12 ++
TOCKAZAREZ 12 ;
D_VIT_ZAGRADA 12 }
D_VIT_ZAGRADA 13 }
D_VIT_ZAGRADA 13 }
D_VIT_ZAGRADA 13 }
D_VIT_ZAGRADA 13 }
D_VIT_ZAGRADA 14 }
D_VIT_ZAGRADA 15 }
KR_RETURN 17 return
TOCKAZAREZ 17 ;
D_VIT_ZAGRADA 17 }
D_VIT_ZAGRADA 18 }
