KR_VOID 1 void
IDN 1 f
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 x
ZAREZ 1 ,
KR_INT 1 int
IDN 1 a
L_UGL_ZAGRADA 1 [
D_UGL_ZAGRADA 1 ]
D_ZAGRADA 1 )
L_VIT_ZAGRADA 1 {
IDN 2 x
OP_PRIDRUZI 2 =
IDN 2 x
PLUS 2 +
BROJ 2 1
TOCKAZAREZ 2 ;
IDN 3 a
L_UGL_ZAGRADA 3 [
BROJ 3 0
D_UGL_ZAGRADA 3 ]
OP_PRIDRUZI 3 =
IDN 3 a
L_UGL_ZAGRADA 3 [
BROJ 3 0
D_UGL_ZAGRADA 3 ]
PLUS 3 +
BROJ 3 1
TOCKAZAREZ 3 ;
D_VIT_ZAGRADA 4 }
KR_INT 6 int
IDN 6 main
L_ZAGRADA 6 (
KR_VOID 6 void
D_ZAGRADA 6 )
L_VIT_ZAGRADA 6 {
KR_INT 7 int
IDN 7 z
TOCKAZAREZ 7 ;
KR_INT 8 int
IDN 8 x
OP_PRIDRUZI 8 =
BROJ 8 3
TOCKAZAREZ 8 ;
KR_INT 9 int
IDN 9 a
L_UGL_ZAGRADA 9 [
BROJ 9 8
D_UGL_ZAGRADA 9 ]
OP_PRIDRUZI 9 =
L_VIT_ZAGRADA 9 {
BROJ 9 0
D_VIT_ZAGRADA 9 }
TOCKAZAREZ 9 ;
IDN 10 f
L_ZAGRADA 10 (
IDN 10 x
ZAREZ 10 ,
IDN 10 a
D_ZAGRADA 10 )
TOCKAZAREZ 10 ;
KR_CONST 11 const
KR_CHAR 11 char
IDN 11 d
L_UGL_ZAGRADA 11 [
BROJ 11 10
D_UGL_ZAGRADA 11 ]
OP_PRIDRUZI 11 =
L_VIT_ZAGRADA 11 {
ZNAK 11 'a'
ZAREZ 11 ,
ZNAK 11 'b'
ZAREZ 11 ,
ZNAK 11 'c'
D_VIT_ZAGRADA 11 }
TOCKAZAREZ 11 ;
KR_RETURN 12 return
BROJ 12 0
TOCKAZAREZ 12 ;
D_VIT_ZAGRADA 13 }
