KR_VOID 18 void
IDN 18 fun
L_ZAGRADA 18 (
KR_INT 18 int
IDN 18 xYz
D_ZAGRADA 18 )
L_VIT_ZAGRADA 18 {
KR_RETURN 19 return
TOCKAZAREZ 19 ;
D_VIT_ZAGRADA 20 }
KR_INT 23 int
IDN 23 main
L_ZAGRADA 23 (
KR_VOID 23 void
D_ZAGRADA 23 )
L_VIT_ZAGRADA 23 {
KR_INT 24 int
IDN 24 A
L_UGL_ZAGRADA 24 [
BROJ 24 512
D_UGL_ZAGRADA 24 ]
TOCKAZAREZ 24 ;
KR_CHAR 25 char
IDN 25 tmp
L_UGL_ZAGRADA 25 [
D_UGL_ZAGRADA 25 ]
OP_PRIDRUZI 25 =
NIZ_ZNAKOVA 25 "te\nst"
TOCKAZAREZ 25 ;
KR_CONST 26 const
KR_CHAR 26 char
IDN 26 x
L_UGL_ZAGRADA 26 [
D_UGL_ZAGRADA 26 ]
OP_PRIDRUZI 26 =
NIZ_ZNAKOVA 26 "\"tes\"t2\""
TOCKAZAREZ 26 ;
KR_INT 27 int
IDN 27 xYz
ZAREZ 27 ,
IDN 27 abc
TOCKAZAREZ 27 ;
KR_INT 28 int
IDN 28 i
TOCKAZAREZ 28 ;
IDN 30 xYz
OP_PRIDRUZI 30 =
BROJ 30 12345
TOCKAZAREZ 30 ;
IDN 31 abc
OP_PRIDRUZI 31 =
IDN 31 xYz
TOCKAZAREZ 31 ;
IDN 32 abc
OP_PRIDRUZI 32 =
L_ZAGRADA 32 (
IDN 32 xYz
D_ZAGRADA 32 )
TOCKAZAREZ 32 ;
IDN 33 abc
OP_PRIDRUZI 33 =
IDN 33 abc
OP_INC 33 ++
PLUS 33 +
IDN 33 xYz
TOCKAZAREZ 33 ;
IDN 34 abc
OP_PRIDRUZI 34 =
BROJ 34 054
OP_MOD 34 %
BROJ 34 5
TOCKAZAREZ 34 ;
IDN 35 abc
OP_PRIDRUZI 35 =
BROJ 35 0xaafff
TOCKAZAREZ 35 ;
IDN 36 i
OP_PRIDRUZI 36 =
BROJ 36 3
OP_PUTA 36 *
BROJ 36 2
PLUS 36 +
BROJ 36 5
MINUS 36 -
BROJ 36 3
OP_BIN_ILI 36 |
BROJ 36 3
OP_BIN_I 36 &
BROJ 36 3
OP_BIN_XILI 36 ^
BROJ 36 3
TOCKAZAREZ 36 ;
IDN 38 tmp
L_UGL_ZAGRADA 38 [
BROJ 38 1
D_UGL_ZAGRADA 38 ]
OP_PRIDRUZI 38 =
ZNAK 38 'b'
TOCKAZAREZ 38 ;
IDN 39 tmp
L_UGL_ZAGRADA 39 [
BROJ 39 2
D_UGL_ZAGRADA 39 ]
OP_PRIDRUZI 39 =
ZNAK 39 '\n'
TOCKAZAREZ 39 ;
IDN 40 tmp
L_UGL_ZAGRADA 40 [
BROJ 40 0
D_UGL_ZAGRADA 40 ]
OP_PRIDRUZI 40 =
ZNAK 40 '\''
KR_FOR 41 for
L_ZAGRADA 41 (
IDN 41 i
OP_PRIDRUZI 41 =
BROJ 41 0
TOCKAZAREZ 41 ;
IDN 41 i
OP_LT 41 <
BROJ 41 4
TOCKAZAREZ 41 ;
OP_INC 41 ++
IDN 41 i
D_ZAGRADA 41 )
L_VIT_ZAGRADA 41 {
IDN 42 tmp
L_UGL_ZAGRADA 42 [
IDN 42 i
D_UGL_ZAGRADA 42 ]
OP_PRIDRUZI 42 =
L_ZAGRADA 42 (
KR_CHAR 42 char
D_ZAGRADA 42 )
IDN 42 abc
TOCKAZAREZ 42 ;
KR_BREAK 45 break
TOCKAZAREZ 45 ;
KR_CONTINUE 46 continue
TOCKAZAREZ 46 ;
KR_RETURN 47 return
IDN 47 xYz
TOCKAZAREZ 47 ;
D_VIT_ZAGRADA 48 }
KR_IF 50 if
L_ZAGRADA 50 (
BROJ 50 1
OP_GTE 50 >=
BROJ 50 3
OP_I 50 &&
IDN 50 i
OP_GT 50 >
BROJ 50 2
OP_ILI 50 ||
IDN 50 i
OP_LTE 50 <=
BROJ 50 12
D_ZAGRADA 50 )
L_VIT_ZAGRADA 50 {
IDN 51 fun
L_ZAGRADA 51 (
BROJ 51 3
D_ZAGRADA 51 )
TOCKAZAREZ 51 ;
D_VIT_ZAGRADA 52 }
KR_ELSE 52 else
L_VIT_ZAGRADA 52 {
IDN 53 fun
L_ZAGRADA 53 (
BROJ 53 5
D_ZAGRADA 53 )
TOCKAZAREZ 53 ;
D_VIT_ZAGRADA 54 }
KR_WHILE 56 while
L_ZAGRADA 56 (
BROJ 56 1
D_ZAGRADA 56 )
L_VIT_ZAGRADA 56 {
KR_BREAK 57 break
TOCKAZAREZ 57 ;
D_VIT_ZAGRADA 58 }
KR_RETURN 60 return
BROJ 60 0
TOCKAZAREZ 60 ;
D_VIT_ZAGRADA 61 }
