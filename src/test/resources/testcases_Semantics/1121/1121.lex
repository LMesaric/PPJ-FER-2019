KR_INT 1 int
IDN 1 x
OP_PRIDRUZI 1 =
BROJ 1 7
TOCKAZAREZ 1 ;
KR_CHAR 2 char
IDN 2 f
L_ZAGRADA 2 (
KR_CHAR 2 char
IDN 2 x
D_ZAGRADA 2 )
L_VIT_ZAGRADA 3 {
KR_INT 4 int
IDN 4 i
OP_PRIDRUZI 4 =
BROJ 4 1
TOCKAZAREZ 4 ;
L_VIT_ZAGRADA 5 {
KR_INT 6 int
IDN 6 x
OP_PRIDRUZI 6 =
BROJ 6 2
TOCKAZAREZ 6 ;
IDN 7 i
OP_PRIDRUZI 7 =
IDN 7 i
OP_INC 7 ++
PLUS 7 +
IDN 7 x
OP_INC 7 ++
TOCKAZAREZ 7 ;
L_VIT_ZAGRADA 8 {
KR_CHAR 9 char
IDN 9 x
OP_PRIDRUZI 9 =
ZNAK 9 'a'
TOCKAZAREZ 9 ;
IDN 10 i
OP_PRIDRUZI 10 =
IDN 10 i
PLUS 10 +
IDN 10 x
OP_INC 10 ++
TOCKAZAREZ 10 ;
D_VIT_ZAGRADA 11 }
D_VIT_ZAGRADA 12 }
KR_RETURN 13 return
L_ZAGRADA 13 (
KR_CHAR 13 char
D_ZAGRADA 13 )
IDN 13 x
OP_INC 13 ++
TOCKAZAREZ 13 ;
D_VIT_ZAGRADA 14 }
KR_INT 15 int
IDN 15 main
L_ZAGRADA 15 (
KR_VOID 15 void
D_ZAGRADA 15 )
L_VIT_ZAGRADA 16 {
KR_CHAR 17 char
IDN 17 x
TOCKAZAREZ 17 ;
IDN 18 f
L_ZAGRADA 18 (
IDN 18 f
L_ZAGRADA 18 (
IDN 18 f
L_ZAGRADA 18 (
ZNAK 18 'X'
D_ZAGRADA 18 )
D_ZAGRADA 18 )
PLUS 18 +
BROJ 18 2
D_ZAGRADA 18 )
TOCKAZAREZ 18 ;
KR_RETURN 19 return
IDN 19 x
TOCKAZAREZ 19 ;
D_VIT_ZAGRADA 20 }
