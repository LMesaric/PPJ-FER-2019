KR_INT 15 int
IDN 15 printf
L_ZAGRADA 15 (
KR_CONST 15 const
KR_CHAR 15 char
IDN 15 format
L_UGL_ZAGRADA 15 [
D_UGL_ZAGRADA 15 ]
D_ZAGRADA 15 )
L_VIT_ZAGRADA 15 {
KR_RETURN 17 return
BROJ 17 0
TOCKAZAREZ 17 ;
D_VIT_ZAGRADA 18 }
KR_INT 20 int
IDN 20 fakt
L_ZAGRADA 20 (
KR_INT 20 int
IDN 20 n
D_ZAGRADA 20 )
L_VIT_ZAGRADA 20 {
KR_INT 21 int
IDN 21 nfakt
TOCKAZAREZ 21 ;
KR_IF 22 if
L_ZAGRADA 22 (
IDN 22 n
OP_LTE 22 <=
BROJ 22 1
D_ZAGRADA 22 )
L_VIT_ZAGRADA 22 {
IDN 23 nfakt
OP_PRIDRUZI 23 =
BROJ 23 1
TOCKAZAREZ 23 ;
D_VIT_ZAGRADA 24 }
KR_ELSE 24 else
L_VIT_ZAGRADA 24 {
IDN 25 nfakt
OP_PRIDRUZI 25 =
IDN 25 n
OP_PUTA 25 *
IDN 25 fakt
L_ZAGRADA 25 (
IDN 25 n
MINUS 25 -
BROJ 25 1
D_ZAGRADA 25 )
TOCKAZAREZ 25 ;
KR_IF 26 if
L_ZAGRADA 26 (
IDN 26 nfakt
OP_LT 26 <
BROJ 26 0
D_ZAGRADA 26 )
L_VIT_ZAGRADA 26 {
IDN 27 exit
L_ZAGRADA 27 (
BROJ 27 1
D_ZAGRADA 27 )
TOCKAZAREZ 27 ;
D_VIT_ZAGRADA 28 }
D_VIT_ZAGRADA 29 }
KR_RETURN 30 return
IDN 30 nfakt
TOCKAZAREZ 30 ;
D_VIT_ZAGRADA 31 }
KR_INT 35 int
IDN 35 main
L_ZAGRADA 35 (
KR_VOID 35 void
D_ZAGRADA 35 )
L_VIT_ZAGRADA 35 {
KR_INT 36 int
IDN 36 n
ZAREZ 36 ,
IDN 36 fakto
TOCKAZAREZ 36 ;
IDN 37 n
OP_PRIDRUZI 37 =
BROJ 37 0
TOCKAZAREZ 37 ;
KR_WHILE 38 while
L_ZAGRADA 38 (
BROJ 38 1
D_ZAGRADA 38 )
L_VIT_ZAGRADA 38 {
KR_IF 39 if
L_ZAGRADA 39 (
IDN 39 n
OP_GT 39 >
BROJ 39 100000000
D_ZAGRADA 39 )
KR_RETURN 39 return
BROJ 39 0
TOCKAZAREZ 39 ;
KR_ELSE 40 else
IDN 40 fakto
OP_PRIDRUZI 40 =
IDN 40 fakt
L_ZAGRADA 40 (
IDN 40 n
D_ZAGRADA 40 )
TOCKAZAREZ 40 ;
D_VIT_ZAGRADA 41 }
KR_RETURN 42 return
BROJ 42 0
TOCKAZAREZ 42 ;
D_VIT_ZAGRADA 43 }
