KR_VOID 2 void
IDN 2 foo
L_ZAGRADA 2 (
KR_INT 2 int
IDN 2 x
ZAREZ 2 ,
KR_INT 2 int
IDN 2 c
ZAREZ 2 ,
KR_CHAR 2 char
IDN 2 h
D_ZAGRADA 2 )
TOCKAZAREZ 2 ;
KR_INT 4 int
IDN 4 f
L_ZAGRADA 4 (
KR_VOID 4 void
D_ZAGRADA 4 )
L_VIT_ZAGRADA 5 {
KR_RETURN 6 return
BROJ 6 0
TOCKAZAREZ 6 ;
D_VIT_ZAGRADA 7 }
KR_INT 9 int
IDN 9 x
OP_PRIDRUZI 9 =
BROJ 9 3
TOCKAZAREZ 9 ;
KR_INT 13 int
IDN 13 main
L_ZAGRADA 13 (
KR_VOID 13 void
D_ZAGRADA 13 )
L_VIT_ZAGRADA 14 {
KR_INT 15 int
IDN 15 a
OP_PRIDRUZI 15 =
BROJ 15 5
TOCKAZAREZ 15 ;
KR_CONST 16 const
KR_CHAR 16 char
IDN 16 c
OP_PRIDRUZI 16 =
ZNAK 16 'i'
TOCKAZAREZ 16 ;
KR_INT 17 int
IDN 17 niz
L_UGL_ZAGRADA 17 [
BROJ 17 3
D_UGL_ZAGRADA 17 ]
TOCKAZAREZ 17 ;
KR_VOID 18 void
IDN 18 foo
L_ZAGRADA 18 (
KR_INT 18 int
IDN 18 x
ZAREZ 18 ,
KR_INT 18 int
IDN 18 c
ZAREZ 18 ,
KR_CHAR 18 char
IDN 18 h
D_ZAGRADA 18 )
TOCKAZAREZ 18 ;
KR_INT 19 int
IDN 19 x
OP_PRIDRUZI 19 =
BROJ 19 5
TOCKAZAREZ 19 ;
KR_INT 20 int
IDN 20 y
OP_PRIDRUZI 20 =
IDN 20 x
PLUS 20 +
BROJ 20 1
TOCKAZAREZ 20 ;
IDN 21 a
OP_PRIDRUZI 21 =
IDN 21 a
PLUS 21 +
BROJ 21 3
TOCKAZAREZ 21 ;
KR_IF 23 if
L_ZAGRADA 23 (
IDN 23 a
OP_GT 23 >
BROJ 23 2
D_ZAGRADA 23 )
L_VIT_ZAGRADA 24 {
KR_INT 25 int
IDN 25 a
TOCKAZAREZ 25 ;
KR_INT 26 int
IDN 26 b
TOCKAZAREZ 26 ;
IDN 27 a
OP_PRIDRUZI 27 =
IDN 27 b
TOCKAZAREZ 27 ;
IDN 28 x
OP_PRIDRUZI 28 =
BROJ 28 4
TOCKAZAREZ 28 ;
D_VIT_ZAGRADA 29 }
KR_RETURN 30 return
IDN 30 f
L_ZAGRADA 30 (
D_ZAGRADA 30 )
TOCKAZAREZ 30 ;
D_VIT_ZAGRADA 31 }
KR_INT 33 int
IDN 33 fact
L_ZAGRADA 33 (
KR_INT 33 int
IDN 33 bzvz
D_ZAGRADA 33 )
TOCKAZAREZ 33 ;
KR_VOID 35 void
IDN 35 foo
L_ZAGRADA 35 (
KR_INT 35 int
IDN 35 x
ZAREZ 35 ,
KR_INT 35 int
IDN 35 c
ZAREZ 35 ,
KR_CHAR 35 char
IDN 35 h
D_ZAGRADA 35 )
L_VIT_ZAGRADA 36 {
KR_INT 37 int
IDN 37 i
OP_PRIDRUZI 37 =
IDN 37 fact
L_ZAGRADA 37 (
IDN 37 x
D_ZAGRADA 37 )
TOCKAZAREZ 37 ;
KR_INT 38 int
IDN 38 a
OP_PRIDRUZI 38 =
IDN 38 a
PLUS 38 +
BROJ 38 1
TOCKAZAREZ 38 ;
KR_VOID 39 void
IDN 39 foo3
L_ZAGRADA 39 (
KR_VOID 39 void
D_ZAGRADA 39 )
TOCKAZAREZ 39 ;
KR_INT 40 int
IDN 40 niz1
L_UGL_ZAGRADA 40 [
BROJ 40 5
D_UGL_ZAGRADA 40 ]
OP_PRIDRUZI 40 =
L_VIT_ZAGRADA 40 {
BROJ 40 1
ZAREZ 40 ,
BROJ 40 2
ZAREZ 40 ,
BROJ 40 3
D_VIT_ZAGRADA 40 }
TOCKAZAREZ 40 ;
KR_FOR 42 for
L_ZAGRADA 42 (
IDN 42 i
OP_PRIDRUZI 42 =
BROJ 42 0
TOCKAZAREZ 42 ;
IDN 42 i
OP_LT 42 <
BROJ 42 5
TOCKAZAREZ 42 ;
IDN 42 i
OP_INC 42 ++
D_ZAGRADA 42 )
KR_BREAK 43 break
TOCKAZAREZ 43 ;
KR_WHILE 44 while
L_ZAGRADA 44 (
BROJ 44 1
D_ZAGRADA 44 )
L_VIT_ZAGRADA 45 {
KR_BREAK 46 break
TOCKAZAREZ 46 ;
IDN 47 i
OP_PRIDRUZI 47 =
IDN 47 i
PLUS 47 +
BROJ 47 2
TOCKAZAREZ 47 ;
D_VIT_ZAGRADA 48 }
KR_RETURN 49 return
BROJ 49 5
TOCKAZAREZ 49 ;
KR_RETURN 50 return
TOCKAZAREZ 50 ;
D_VIT_ZAGRADA 52 }
KR_CHAR 54 char
IDN 54 proba3
L_ZAGRADA 54 (
KR_VOID 54 void
D_ZAGRADA 54 )
L_VIT_ZAGRADA 55 {
IDN 56 x
OP_PRIDRUZI 56 =
BROJ 56 4
TOCKAZAREZ 56 ;
KR_IF 57 if
L_ZAGRADA 57 (
BROJ 57 0
D_ZAGRADA 57 )
L_VIT_ZAGRADA 58 {
IDN 59 x
OP_PRIDRUZI 59 =
BROJ 59 6
TOCKAZAREZ 59 ;
KR_RETURN 60 return
ZNAK 60 'a'
TOCKAZAREZ 60 ;
D_VIT_ZAGRADA 61 }
KR_ELSE 61 else
L_VIT_ZAGRADA 61 {
KR_RETURN 62 return
L_ZAGRADA 62 (
KR_CHAR 62 char
D_ZAGRADA 62 )
BROJ 62 97
TOCKAZAREZ 62 ;
D_VIT_ZAGRADA 64 }
D_VIT_ZAGRADA 65 }
KR_CHAR 67 char
IDN 67 proba
L_ZAGRADA 67 (
KR_VOID 67 void
D_ZAGRADA 67 )
L_VIT_ZAGRADA 68 {
KR_RETURN 69 return
L_ZAGRADA 69 (
KR_CHAR 69 char
D_ZAGRADA 69 )
BROJ 69 97
TOCKAZAREZ 69 ;
D_VIT_ZAGRADA 70 }
KR_INT 73 int
IDN 73 proba2
L_ZAGRADA 73 (
KR_VOID 73 void
D_ZAGRADA 73 )
L_VIT_ZAGRADA 74 {
KR_RETURN 76 return
ZNAK 76 'a'
TOCKAZAREZ 76 ;
D_VIT_ZAGRADA 77 }
KR_INT 79 int
IDN 79 fact
L_ZAGRADA 79 (
KR_INT 79 int
IDN 79 n
D_ZAGRADA 79 )
L_VIT_ZAGRADA 80 {
IDN 81 foo
L_ZAGRADA 81 (
BROJ 81 1
ZAREZ 81 ,
BROJ 81 2
ZAREZ 81 ,
ZNAK 81 'h'
D_ZAGRADA 81 )
TOCKAZAREZ 81 ;
KR_IF 82 if
L_ZAGRADA 82 (
IDN 82 n
OP_GT 82 >
BROJ 82 0
D_ZAGRADA 82 )
KR_RETURN 83 return
IDN 83 n
OP_PUTA 83 *
IDN 83 fact
L_ZAGRADA 83 (
IDN 83 n
MINUS 83 -
BROJ 83 1
D_ZAGRADA 83 )
TOCKAZAREZ 83 ;
KR_ELSE 84 else
KR_RETURN 85 return
BROJ 85 1
TOCKAZAREZ 85 ;
D_VIT_ZAGRADA 86 }
KR_VOID 88 void
IDN 88 foo3
L_ZAGRADA 88 (
KR_VOID 88 void
D_ZAGRADA 88 )
L_VIT_ZAGRADA 89 {
KR_INT 90 int
IDN 90 i
OP_PRIDRUZI 90 =
BROJ 90 8
TOCKAZAREZ 90 ;
KR_RETURN 92 return
TOCKAZAREZ 92 ;
D_VIT_ZAGRADA 93 }
KR_VOID 95 void
IDN 95 f2
L_ZAGRADA 95 (
KR_INT 95 int
IDN 95 x
ZAREZ 95 ,
KR_INT 95 int
IDN 95 a
L_UGL_ZAGRADA 95 [
D_UGL_ZAGRADA 95 ]
D_ZAGRADA 95 )
L_VIT_ZAGRADA 95 {
IDN 96 x
OP_PRIDRUZI 96 =
IDN 96 x
PLUS 96 +
BROJ 96 1
TOCKAZAREZ 96 ;
D_VIT_ZAGRADA 98 }
KR_INT 109 int
IDN 109 main2
L_ZAGRADA 109 (
KR_VOID 109 void
D_ZAGRADA 109 )
L_VIT_ZAGRADA 109 {
KR_INT 110 int
IDN 110 x
OP_PRIDRUZI 110 =
BROJ 110 2147483647
ZAREZ 110 ,
IDN 110 y
TOCKAZAREZ 110 ;
L_ZAGRADA 112 (
KR_INT 112 int
D_ZAGRADA 112 )
ZNAK 112 'a'
TOCKAZAREZ 112 ;
L_ZAGRADA 113 (
KR_CONST 113 const
KR_CHAR 113 char
D_ZAGRADA 113 )
IDN 113 x
TOCKAZAREZ 113 ;
L_ZAGRADA 114 (
KR_CONST 114 const
KR_INT 114 int
D_ZAGRADA 114 )
ZNAK 114 'a'
TOCKAZAREZ 114 ;
L_ZAGRADA 115 (
KR_CHAR 115 char
D_ZAGRADA 115 )
L_ZAGRADA 115 (
L_ZAGRADA 115 (
KR_CONST 115 const
KR_INT 115 int
D_ZAGRADA 115 )
BROJ 115 300
PLUS 115 +
L_ZAGRADA 115 (
KR_INT 115 int
D_ZAGRADA 115 )
ZNAK 115 'a'
D_ZAGRADA 115 )
TOCKAZAREZ 115 ;
L_ZAGRADA 116 (
KR_INT 116 int
D_ZAGRADA 116 )
L_ZAGRADA 116 (
KR_CHAR 116 char
D_ZAGRADA 116 )
L_ZAGRADA 116 (
KR_CONST 116 const
KR_INT 116 int
D_ZAGRADA 116 )
L_ZAGRADA 116 (
KR_CONST 116 const
KR_CHAR 116 char
D_ZAGRADA 116 )
L_ZAGRADA 116 (
IDN 116 x
PLUS 116 +
IDN 116 y
D_ZAGRADA 116 )
TOCKAZAREZ 116 ;
KR_RETURN 118 return
BROJ 118 0
TOCKAZAREZ 118 ;
D_VIT_ZAGRADA 119 }
