KR_VOID 1 void
IDN 1 foo
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 a
D_ZAGRADA 1 )
L_VIT_ZAGRADA 1 {
KR_IF 2 if
L_ZAGRADA 2 (
IDN 2 a
OP_GT 2 >
BROJ 2 12
D_ZAGRADA 2 )
KR_RETURN 3 return
TOCKAZAREZ 3 ;
KR_RETURN 4 return
IDN 4 a
D_VIT_ZAGRADA 5 }
KR_INT 7 int
IDN 7 main
L_ZAGRADA 7 (
KR_VOID 7 void
D_ZAGRADA 7 )
L_VIT_ZAGRADA 7 {
KR_INT 8 int
IDN 8 A
L_UGL_ZAGRADA 8 [
BROJ 8 555123112
D_UGL_ZAGRADA 8 ]
TOCKAZAREZ 8 ;
KR_INT 9 int
IDN 9 t
L_UGL_ZAGRADA 9 [
BROJ 9 3
D_UGL_ZAGRADA 9 ]
OP_PRIDRUZI 9 =
L_VIT_ZAGRADA 9 {
BROJ 9 1
ZAREZ 9 ,
BROJ 9 2
ZAREZ 9 ,
BROJ 9 3
D_VIT_ZAGRADA 9 }
TOCKAZAREZ 9 ;
KR_CONST 10 const
KR_CHAR 10 char
IDN 10 x
L_UGL_ZAGRADA 10 [
D_UGL_ZAGRADA 10 ]
OP_PRIDRUZI 10 =
NIZ_ZNAKOVA 10 "\"t e s\"t 2 \""
TOCKAZAREZ 10 ;
IDN 11 i
OP_PRIDRUZI 11 =
BROJ 11 3
OP_PUTA 11 *
BROJ 11 2
PLUS 11 +
BROJ 11 5
MINUS 11 -
BROJ 11 3
OP_BIN_ILI 11 |
BROJ 11 3
OP_BIN_I 11 &
BROJ 11 3
OP_BIN_XILI 11 ^
BROJ 11 3
TOCKAZAREZ 11 ;
IDN 13 tmp
L_UGL_ZAGRADA 13 [
BROJ 13 1
D_UGL_ZAGRADA 13 ]
OP_PRIDRUZI 13 =
ZNAK 13 'b'
TOCKAZAREZ 13 ;
IDN 14 tmp
L_UGL_ZAGRADA 14 [
BROJ 14 2
D_UGL_ZAGRADA 14 ]
OP_PRIDRUZI 14 =
ZNAK 14 '\n'
TOCKAZAREZ 14 ;
KR_FOR 15 for
L_ZAGRADA 15 (
IDN 15 i
OP_PRIDRUZI 15 =
BROJ 15 0
TOCKAZAREZ 15 ;
IDN 15 i
OP_LT 15 <
BROJ 15 4
TOCKAZAREZ 15 ;
OP_INC 15 ++
IDN 15 i
D_ZAGRADA 15 )
L_VIT_ZAGRADA 15 {
IDN 16 tmp
L_UGL_ZAGRADA 16 [
IDN 16 i
D_UGL_ZAGRADA 16 ]
OP_PRIDRUZI 16 =
L_ZAGRADA 16 (
KR_CHAR 16 char
D_ZAGRADA 16 )
IDN 16 abc
TOCKAZAREZ 16 ;
KR_BREAK 19 break
TOCKAZAREZ 19 ;
KR_CONTINUE 20 continue
TOCKAZAREZ 20 ;
KR_RETURN 21 return
IDN 21 xYz
TOCKAZAREZ 21 ;
D_VIT_ZAGRADA 22 }
KR_IF 24 if
L_ZAGRADA 24 (
BROJ 24 1
OP_GTE 24 >=
BROJ 24 3
OP_I 24 &&
OP_TILDA 24 ~
IDN 24 i
OP_GT 24 >
BROJ 24 2
OP_ILI 24 ||
IDN 24 i
OP_LTE 24 <=
BROJ 24 12
D_ZAGRADA 24 )
L_VIT_ZAGRADA 24 {
IDN 25 fun
L_ZAGRADA 25 (
BROJ 25 3
D_ZAGRADA 25 )
TOCKAZAREZ 25 ;
D_VIT_ZAGRADA 26 }
KR_ELSE 26 else
L_VIT_ZAGRADA 26 {
IDN 27 fun
L_ZAGRADA 27 (
BROJ 27 5
D_ZAGRADA 27 )
TOCKAZAREZ 27 ;
D_VIT_ZAGRADA 28 }
IDN 30 tmp
L_UGL_ZAGRADA 30 [
BROJ 30 0
D_UGL_ZAGRADA 30 ]
OP_PRIDRUZI 30 =
IDN 30 bar
L_ZAGRADA 30 (
D_ZAGRADA 30 )
TOCKAZAREZ 30 ;
KR_WHILE 32 while
L_ZAGRADA 32 (
BROJ 32 1
OP_EQ 32 ==
BROJ 32 1
D_ZAGRADA 32 )
L_VIT_ZAGRADA 32 {
KR_BREAK 33 break
TOCKAZAREZ 33 ;
D_VIT_ZAGRADA 34 }
KR_RETURN 36 return
BROJ 36 0
MINUS 36 -
BROJ 36 0
PLUS 36 +
BROJ 36 1
MINUS 36 -
BROJ 36 1
TOCKAZAREZ 36 ;
D_VIT_ZAGRADA 37 }
KR_CHAR 39 char
IDN 39 bar
L_ZAGRADA 39 (
KR_VOID 39 void
D_ZAGRADA 39 )
L_VIT_ZAGRADA 39 {
KR_RETURN 40 return
ZNAK 40 'a'
TOCKAZAREZ 40 ;
D_VIT_ZAGRADA 41 }
